// <auto-generated />
using System;
using ASI.Basecode.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASI.Basecode.Data.Migrations
{
    [DbContext(typeof(WorkSyncDbContext))]
    [Migration("20251031125806_AddUserNumericId")]
    partial class AddUserNumericId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ASI.Basecode.Data.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime?>("EndDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Recurrence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("StartDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("BookingId")
                        .HasName("PK__Bookings__73951AED31FDD369");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings", "ws");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.BookingLog", b =>
                {
                    b.Property<int>("BookingLogId")
                        .HasColumnType("int");

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("CurrentStatus")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EventType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("BookingLogId")
                        .HasName("PK__BookingL__D6D56B32605743C8");

                    b.HasIndex("BookingId");

                    b.HasIndex("UserId");

                    b.ToTable("BookingLogs", "ws");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.Room", b =>
                {
                    b.Property<string>("RoomId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Level")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OperatingHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Seats")
                        .HasColumnType("int");

                    b.Property<string>("SizeLabel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("RoomId")
                        .HasName("PK__Rooms__32863939FDF5413B");

                    b.ToTable("Rooms", "ws");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.RoomAmenity", b =>
                {
                    b.Property<string>("RoomId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Amenity")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoomId", "Amenity");

                    b.ToTable("RoomAmenities", "ws");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.RoomLog", b =>
                {
                    b.Property<int>("RoomLogId")
                        .HasColumnType("int");

                    b.Property<string>("CurrentStatus")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EventType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RoomId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RoomLogId")
                        .HasName("PK__RoomLogs__71A264C4826A7346");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("RoomLogs", "ws");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.Session", b =>
                {
                    b.Property<string>("SessionId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Auth")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("SessionId")
                        .HasName("PK__Sessions__C9F492906CEBC5BB");

                    b.HasIndex("UserId");

                    b.ToTable("Sessions", "ws");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Fname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Lname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Role")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4C933F73B0");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D1053413C382AE")
                        .IsUnique();

                    b.ToTable("Users", "ws");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.UserPreference", b =>
                {
                    b.Property<int>("PrefId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrefId"));

                    b.Property<int?>("BookingDefaultMinutes")
                        .HasColumnType("int");

                    b.Property<bool?>("BookingEmailConfirm")
                        .HasColumnType("bit");

                    b.Property<bool?>("BookingReminder")
                        .HasColumnType("bit");

                    b.Property<bool?>("CancellationNotif")
                        .HasColumnType("bit");

                    b.Property<string>("RawJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReminderTimeMinutes")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("PrefId")
                        .HasName("PK__UserPref__1F832A20BF4E3852");

                    b.HasIndex("UserId");

                    b.ToTable("UserPreferences", "ws");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.Booking", b =>
                {
                    b.HasOne("ASI.Basecode.Data.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK_Bookings_Rooms");

                    b.HasOne("ASI.Basecode.Data.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Bookings_Users");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.BookingLog", b =>
                {
                    b.HasOne("ASI.Basecode.Data.Models.Booking", "Booking")
                        .WithMany("BookingLogs")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK_BookingLogs_Bookings");

                    b.HasOne("ASI.Basecode.Data.Models.User", "User")
                        .WithMany("BookingLogs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_BookingLogs_Users");

                    b.Navigation("Booking");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.RoomAmenity", b =>
                {
                    b.HasOne("ASI.Basecode.Data.Models.Room", "Room")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK_RoomAmenities_Rooms");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.RoomLog", b =>
                {
                    b.HasOne("ASI.Basecode.Data.Models.Room", "Room")
                        .WithMany("RoomLogs")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK_RoomLogs_Rooms");

                    b.HasOne("ASI.Basecode.Data.Models.User", "User")
                        .WithMany("RoomLogs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_RoomLogs_Users");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.Session", b =>
                {
                    b.HasOne("ASI.Basecode.Data.Models.User", "User")
                        .WithMany("Sessions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Sessions_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.UserPreference", b =>
                {
                    b.HasOne("ASI.Basecode.Data.Models.User", "User")
                        .WithMany("UserPreferences")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserPreferences_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.Booking", b =>
                {
                    b.Navigation("BookingLogs");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.Room", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("RoomAmenities");

                    b.Navigation("RoomLogs");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.User", b =>
                {
                    b.Navigation("BookingLogs");

                    b.Navigation("Bookings");

                    b.Navigation("RoomLogs");

                    b.Navigation("Sessions");

                    b.Navigation("UserPreferences");
                });
#pragma warning restore 612, 618
        }
    }
}
